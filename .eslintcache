[{"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js":"4","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js":"17"},{"size":695,"mtime":1609187252000,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1608573100000,"results":"20","hashOfConfig":"19"},{"size":557,"mtime":1609812017000,"results":"21","hashOfConfig":"19"},{"size":1493,"mtime":1609258859000,"results":"22","hashOfConfig":"19"},{"size":1242,"mtime":1609252803000,"results":"23","hashOfConfig":"19"},{"size":7331,"mtime":1610213834000,"results":"24","hashOfConfig":"19"},{"size":2019,"mtime":1609813346000,"results":"25","hashOfConfig":"19"},{"size":5178,"mtime":1609794757000,"results":"26","hashOfConfig":"19"},{"size":1911,"mtime":1609545022000,"results":"27","hashOfConfig":"19"},{"size":924,"mtime":1609254114000,"results":"28","hashOfConfig":"19"},{"size":11057,"mtime":1609863335000,"results":"29","hashOfConfig":"19"},{"size":4243,"mtime":1609252848000,"results":"30","hashOfConfig":"19"},{"size":1054,"mtime":1609252807000,"results":"31","hashOfConfig":"19"},{"size":303,"mtime":1609252810000,"results":"32","hashOfConfig":"19"},{"size":4066,"mtime":1609605228000,"results":"33","hashOfConfig":"19"},{"size":215,"mtime":1609811552000,"results":"34","hashOfConfig":"19"},{"size":404,"mtime":1609811324000,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"bj1k83",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["72","73"],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["74","75","76","77","78","79"],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["80","81","82","83","84","85","86"],"import React, {Component}  from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap'\nimport {Link} from 'react-router-dom'\nimport {Control, LocalForm, Errors} from 'react-redux-form'\n\nconst required =  val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName : '',\n            lastName : '',\n            phoneNum : '',\n            email : '',\n            agree : false,\n            contactType : 'By Phone',\n            feedback: '',\n            touched: {\n                firstName : false,\n                lastName : false,\n                phoneNum : false,\n                email : false\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this) \n    }\n   \n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values))\n        alert(\"Current state is: \" + JSON.stringify(values))\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n    \n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className='form-group'> \n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model =\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength : maxLength(15)\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstName'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 2 characters',\n                                            maxLength :  'Must be 15 charecters or less'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength : maxLength(15)\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.lastName'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 2 characters',\n                                            maxLength :  'Must be 15 charecters or less'\n\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength : maxLength(15),\n                                            isNumber\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.phoneNum'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 10 numbers',\n                                            maxLength :  'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            validEmail\n                                        }}       \n                                    />\n                                           <Errors\n                                        className='text-danger'\n                                        model='.email'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            validEmail : 'Invalid Email address'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model='.agree'\n                                                name=\"agree\"\n                                                className='form-check-input'\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                               <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model='.feedback' id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className='form-control'   \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/reducer.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":111,"nodeType":"93","messageId":"94","endLine":2,"endColumn":115},{"ruleId":"91","severity":1,"message":"95","line":2,"column":117,"nodeType":"93","messageId":"94","endLine":2,"endColumn":126},{"ruleId":"91","severity":1,"message":"96","line":2,"column":128,"nodeType":"93","messageId":"94","endLine":2,"endColumn":133},{"ruleId":"97","severity":1,"message":"98","line":87,"column":37,"nodeType":"99","endLine":87,"endColumn":120},{"ruleId":"97","severity":1,"message":"100","line":101,"column":37,"nodeType":"99","endLine":112,"endColumn":39},{"ruleId":"97","severity":1,"message":"101","line":131,"column":37,"nodeType":"99","endLine":137,"endColumn":39},{"ruleId":"97","severity":1,"message":"100","line":79,"column":37,"nodeType":"99","endLine":87,"endColumn":39},{"ruleId":"97","severity":1,"message":"100","line":105,"column":37,"nodeType":"99","endLine":113,"endColumn":39},{"ruleId":"97","severity":1,"message":"100","line":131,"column":37,"nodeType":"99","endLine":140,"endColumn":39},{"ruleId":"97","severity":1,"message":"100","line":158,"column":37,"nodeType":"99","endLine":165,"endColumn":39},{"ruleId":"97","severity":1,"message":"102","line":183,"column":45,"nodeType":"99","endLine":187,"endColumn":47},{"ruleId":"97","severity":1,"message":"98","line":193,"column":37,"nodeType":"99","endLine":194,"endColumn":66},{"ruleId":"97","severity":1,"message":"101","line":203,"column":37,"nodeType":"99","endLine":206,"endColumn":39},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]