[{"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"2","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"3","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js":"4","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"8","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"9","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"17","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"18","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"19","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20"},{"size":695,"mtime":1609187252000,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608573100000,"results":"23","hashOfConfig":"22"},{"size":557,"mtime":1609812017000,"results":"24","hashOfConfig":"22"},{"size":1493,"mtime":1609258859000,"results":"25","hashOfConfig":"22"},{"size":1242,"mtime":1609252803000,"results":"26","hashOfConfig":"22"},{"size":5197,"mtime":1610214711000,"results":"27","hashOfConfig":"22"},{"size":2019,"mtime":1609813346000,"results":"28","hashOfConfig":"22"},{"size":5178,"mtime":1609794757000,"results":"29","hashOfConfig":"22"},{"size":1911,"mtime":1609545022000,"results":"30","hashOfConfig":"22"},{"size":924,"mtime":1609254114000,"results":"31","hashOfConfig":"22"},{"size":11057,"mtime":1609863335000,"results":"32","hashOfConfig":"22"},{"size":4243,"mtime":1609252848000,"results":"33","hashOfConfig":"22"},{"size":1054,"mtime":1609252807000,"results":"34","hashOfConfig":"22"},{"size":303,"mtime":1609252810000,"results":"35","hashOfConfig":"22"},{"size":4066,"mtime":1609605228000,"results":"36","hashOfConfig":"22"},{"size":463,"mtime":1610473955000,"results":"37","hashOfConfig":"22"},{"size":173,"mtime":1610473469000,"results":"38","hashOfConfig":"22"},{"size":169,"mtime":1610473515000,"results":"39","hashOfConfig":"22"},{"size":169,"mtime":1610473576000,"results":"40","hashOfConfig":"22"},{"size":177,"mtime":1610473614000,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"bj1k83",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["86","87"],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponents.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["88","89","90","91","92","93","94","95"],"import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\n\nfunction RenderCampsite({ campsite }) {\n  return (\n    <div className=\"col-md-5 m-1\">\n      <Card>\n        <CardImg top src={campsite.image} alt={campsite.name} />\n        <CardBody>\n          <CardText>{campsite.description}</CardText>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n\nfunction RenderComments({ comments }) {\n  if (comments) {\n    return (\n      <div className=\"col-md-5 m-1\">\n        <h4>Comments</h4>\n        {comments.map((comment) => {\n          return (\n            <div key={comment.id}>\n              <p>\n                {comment.text}\n                <br />\n                -- {comment.author} -{\" \"}\n                {new Intl.DateTimeFormat(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"short\",\n                  day: \"2-digit\",\n                }).format(new Date(Date.parse(comment.date)))}\n              </p>\n            </div>\n          );\n        })}\n        <CommentForm />\n      </div>\n    );\n  }\n  return <div></div>;\n}\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !val || val.length <= len;\nconst minLength = (len) => (val) => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false,\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen,\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current state is: \" + JSON.stringify(values));\n    alert(\"Current state is: \" + JSON.stringify(values));\n  }\n\n  render() {\n    return (\n      <>\n        <Button outline onClick={this.toggleModal}>\n          <i className=\"fa fa-pencil fa-lg\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n              <div className=\"form-group\">\n                <Label htmlFor=\"rating\">Rating</Label>\n                <Control.select\n                  model=\".rating\"\n                  id=\"rating\"\n                  name=\"rating\"\n                  className=\"form-control\"\n                >\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                </Control.select>\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"author\">Your Name</Label>\n                <Control.text\n                  model=\".author\"\n                  id=\"author\"\n                  name=\"author\"\n                  placeholder=\"Your Name\"\n                  className=\"form-control\"\n                  validators={{\n                    required,\n                    minLength: minLength(2),\n                    maxLength: maxLength(15),\n                  }}\n                />\n                <Errors\n                  className=\"text-danger\"\n                  model=\".author\"\n                  show=\"touched\"\n                  component=\"div\"\n                  messages={{\n                    required: \"Requiered\",\n                    minLength: \"Must be at least 2 characters\",\n                    maxLength: \"Must be 15 charecters or less\",\n                  }}\n                />\n              </div>\n              <div className=\"form-group\">\n                <Label htmlFor=\"text\">Comment</Label>\n                <Control.textarea\n                  model=\".text\"\n                  id=\"text\"\n                  name=\"text\"\n                  rows=\"6\"\n                  className=\"form-control\"\n                />\n              </div>\n              <div className=\"form-group\">\n                <Button type=\"submit\" color=\"primary\">\n                  Submit\n                </Button>\n              </div>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nfunction CampsiteInfo(props) {\n  if (props.campsite) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/directory\">Directory</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n            </Breadcrumb>\n            <h2>{props.campsite.name}</h2>\n            <hr />\n          </div>\n        </div>\n        <div className=\"row\">\n          <RenderCampsite campsite={props.campsite} />\n          <RenderComments comments={props.comments} />\n        </div>\n      </div>\n    );\n  }\n  return <div></div>;\n}\n\nexport default CampsiteInfo;\n","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["96","97","98","99","100","101","102"],"import React, {Component}  from 'react';\nimport {Breadcrumb, BreadcrumbItem, Button, Label, Col, Row} from 'reactstrap'\nimport {Link} from 'react-router-dom'\nimport {Control, LocalForm, Errors} from 'react-redux-form'\n\nconst required =  val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName : '',\n            lastName : '',\n            phoneNum : '',\n            email : '',\n            agree : false,\n            contactType : 'By Phone',\n            feedback: '',\n            touched: {\n                firstName : false,\n                lastName : false,\n                phoneNum : false,\n                email : false\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this) \n    }\n   \n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values))\n        alert(\"Current state is: \" + JSON.stringify(values))\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                                <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                            </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n    \n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className='form-group'> \n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model =\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength : maxLength(15)\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.firstName'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 2 characters',\n                                            maxLength :  'Must be 15 charecters or less'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength : maxLength(15)\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.lastName'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 2 characters',\n                                            maxLength :  'Must be 15 charecters or less'\n\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength : maxLength(15),\n                                            isNumber\n                                        }}      \n                                    />\n                                    <Errors\n                                        className='text-danger'\n                                        model='.phoneNum'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            minLength : 'Must be at least 10 numbers',\n                                            maxLength :  'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className='form-control'\n                                        validators =  {{\n                                            required,\n                                            validEmail\n                                        }}       \n                                    />\n                                           <Errors\n                                        className='text-danger'\n                                        model='.email'\n                                        show='touched'\n                                        component = 'div'\n                                        messages={{\n                                            required : 'Requiered',\n                                            validEmail : 'Invalid Email address'\n\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model='.agree'\n                                                name=\"agree\"\n                                                className='form-check-input'\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                               <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model='.feedback' id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className='form-control'   \n                                    />\n                                </Col>\n                            </Row>\n                            <Row className='form-group'>\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],["103","104"],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/slm/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":3,"nodeType":"111","messageId":"112","endLine":13,"endColumn":7},{"ruleId":"109","severity":1,"message":"113","line":14,"column":3,"nodeType":"111","messageId":"112","endLine":14,"endColumn":12},{"ruleId":"109","severity":1,"message":"114","line":15,"column":3,"nodeType":"111","messageId":"112","endLine":15,"endColumn":8},{"ruleId":"109","severity":1,"message":"115","line":17,"column":3,"nodeType":"111","messageId":"112","endLine":17,"endColumn":6},{"ruleId":"109","severity":1,"message":"116","line":18,"column":3,"nodeType":"111","messageId":"112","endLine":18,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":101,"column":17,"nodeType":"119","endLine":106,"endColumn":18},{"ruleId":"117","severity":1,"message":"120","line":116,"column":17,"nodeType":"119","endLine":127,"endColumn":19},{"ruleId":"117","severity":1,"message":"121","line":142,"column":17,"nodeType":"119","endLine":148,"endColumn":19},{"ruleId":"117","severity":1,"message":"120","line":79,"column":37,"nodeType":"119","endLine":87,"endColumn":39},{"ruleId":"117","severity":1,"message":"120","line":105,"column":37,"nodeType":"119","endLine":113,"endColumn":39},{"ruleId":"117","severity":1,"message":"120","line":131,"column":37,"nodeType":"119","endLine":140,"endColumn":39},{"ruleId":"117","severity":1,"message":"120","line":158,"column":37,"nodeType":"119","endLine":165,"endColumn":39},{"ruleId":"117","severity":1,"message":"122","line":183,"column":45,"nodeType":"119","endLine":187,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":193,"column":37,"nodeType":"119","endLine":194,"endColumn":66},{"ruleId":"117","severity":1,"message":"121","line":203,"column":37,"nodeType":"119","endLine":206,"endColumn":39},{"ruleId":"105","replacedBy":"123"},{"ruleId":"107","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["125"],["126"],"no-global-assign","no-unsafe-negation"]